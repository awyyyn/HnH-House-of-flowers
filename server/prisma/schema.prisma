generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  email       String     @unique
  firstName   String?
  lastName    String?
  middleName  String?
  password    String
  photo      String?
  phoneNumber String?
  birthDate   DateTime?
  // mfaSecret String?
  // mfaEnabled Boolean @default(false) 
  // address address 
  role        UserRole
  status      UserStatus @default(UNVERIFIED)

  orders Order[]

  // TimeStamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

enum UserStatus {
  VERIFIED
  UNVERIFIED
  DELETED
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  USER
}

model Order {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  customerID String      @db.ObjectId
  customer   User        @relation(fields: [customerID], references: [id])
  status     OrderStatus @default(PENDING)
  totalPrice Float

  orderItems OrderItem[]

  // TimeStamps
  orderDate    DateTime  @default(now())
  preOrderData DateTime?
  deliveryDate DateTime?

  @@map("orders")
}

model Customize {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  price       Float?

  orderItem OrderItem?

  // TimeStamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("customizes")
}

model OrderItem {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  orderId  String @db.ObjectId
  order    Order  @relation(fields: [orderId], references: [id])
  price    Float
  quantity Int

  productId   String?    @unique @db.ObjectId
  product     Product?   @relation(fields: [productId], references: [id])
  isCustomize Boolean    @default(false)
  customizeId String?    @unique @db.ObjectId
  customize   Customize? @relation(fields: [customizeId], references: [id])

  @@map("order_items")
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
  READY_FOR_PICKUP
}

model Product {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String @default("")
  price       Float  @default(0.00)
  image       String
  stock       Int    @default(1)

  status   ProductStatus   @default(IN_STOCK)
  category ProductCategory @default(FLOWER)

  orderItem OrderItem[]

  // TimeStamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("products")
}

enum ProductStatus {
  PRE_ORDER
  DISCONTINUED
  IN_STOCK
  OUT_OF_STOCK
}

enum ProductCategory {
  FLOWER
  BOUQUET
  CHOCOLATE
  GIFT
}


model token {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  token String
  time DateTime

  @@map("tokens")
}

model BlockedUser {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  userId      String @db.ObjectId @unique 
  email       String @unique  
  reason String
  blockedAt DateTime @default(now())

  @@map("blocked_users")
}